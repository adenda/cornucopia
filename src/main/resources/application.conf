
cornucopia {
  // Mininum time (seconds) to wait between reshard events.
  reshard.interval = 60

  // Time (seconds) to wait for hash-slot data to migrate before removing a master node.
  // The external node manager must ensure that the master node stays alive for at least this amount of time.
  // Any data not migrated during this period will be lost.
  //  GB-RAM / GBs-per-second-bandwidth ~= seconds
  grace.period = 300

  // Time (seconds) to wait for cluster topology changes to propagate.
  refresh.timeout = 2
}

kafka {
  bootstrap.servers = "kafka-broker-1-vm:9092,kafka-broker-2-vm:9092"

  consumer {
    // Kafka topic to listen on.
    topic = "cornucopia"

    // Consumer group.
    group.id = "cluster-management"
  }
}

redis {
    cluster {
      // Initial node-hostname from which the full cluster topology will be derived.
      // This node must not be removed during operation of cornucopia.
      // Just one node because undefined behaviour occurs when you list nodes that are in disjoint cluster partitions.
      // Instead of failover capability, you end up with multiple points of failure.
      seed.server = "redis-seed-1"

      // All nodes in the seed list use this port.
      server.port = 6379
    }
}